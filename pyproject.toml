# build-system
# - ref: https://peps.python.org/pep-0517/
#
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# project
# - ref 1: https://peps.python.org/pep-0621/
# - ref 2: https://hatch.pypa.io/latest/config/metadata/#project-metadata
#
[project]
name = "jupyterhub-ltiauthenticator"
description = "JupyterHub authenticator implementing LTI v1.1 and LTI v1.3"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["jupyterhub", "authenticator"]
authors = [
    {name = "Yuvi Panda", email = "yuvipanda@gmail.com"},
    {name = "Jupyter Contributors", email = "jupyter@googlegroups.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "traitlets>=5.1.0",
    "escapism>=1.0.1",
    "jupyterhub>=1.2",
    "oauthlib>=3.2.2",
    "PyJWT[crypto]>=2.7.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pre-commit",
]
test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]

[project.urls]
Documentation = "https://ltiauthenticator.readthedocs.io"
Source = "https://github.com/jupyterhub/ltiauthenticator"
Issues = "https://github.com/jupyterhub/ltiauthenticator/issues"


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]
# target-version should be all supported versions, see
# https://github.com/psf/black/issues/751#issuecomment-473066811
target_version = [
    "py38",
    "py39",
    "py310",
    "py311",
]


# hatch ref: https://hatch.pypa.io/latest/
#
[tool.hatch.version]
path = "ltiauthenticator/_version.py"

[tool.hatch.build.targets.sdist]
exclude = [
    ".flake8",
    ".pre-commit-config.yaml",
    ".readthedocs.yaml",
    "/.github",
    "/docs",
    "/examples",
    "/tests",
    "CHANGELOG.md",
    "CONTRIBUTING.md",
    "RELEASE.md",
]

[tool.hatch.build.targets.wheel]
exclude = [
    ".flake8",
    ".pre-commit-config.yaml",
    ".readthedocs.yaml",
    "/.github",
    "/docs",
    "/examples",
    "/tests",
    "CHANGELOG.md",
    "CONTRIBUTING.md",
    "RELEASE.md",
]


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# pytest is used for running Python based tests
#
# ref: https://docs.pytest.org/en/stable/
#
[tool.pytest.ini_options]
addopts = "--verbose --color=yes --durations=10"
asyncio_mode = "auto"


# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
github_url = "https://github.com/jupyterhub/ltiauthenticator"

[tool.tbump.version]
current = "1.5.2.dev0"
regex = '''
    (?P<major>\d+)
    \.
    (?P<minor>\d+)
    \.
    (?P<patch>\d+)
    (?P<pre>((a|b|rc)\d+)|)
    \.?
    (?P<dev>(?<=\.)dev\d*|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

[[tool.tbump.file]]
src = "ltiauthenticator/_version.py"
